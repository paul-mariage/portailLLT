<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="author">www.visioneo.org</property>
    <property name="createdBy">Eclipse BIRT Designer Version 4.3.1.v201309091055 Build &lt;4.3.1.v20130917-1035></property>
    <html-property name="description" key="report.crosstabledrill.description">An overview crosstab that summaries sales information for  selected year. You can select which  measure to display and the kind of monthly view (periodic/year to date). A summary for previous year is also displayed at the last line, to allow drawing clear comparisons. You can drill-down to product vendors sales detail.</html-property>
    <list-property name="userProperties">
        <structure>
            <property name="name">DataCube.Sales.x</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
        <structure>
            <property name="name">DataCube.Sales.y</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
        <structure>
            <property name="name">DataCube.Month.NewTabularHierarchy2.x</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
        <structure>
            <property name="name">DataCube.Month.NewTabularHierarchy2.y</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
        <structure>
            <property name="name">DataCube.Sales.width</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
        <structure>
            <property name="name">DataCube.Sales.height</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
        <structure>
            <property name="name">DataCube.Month.NewTabularHierarchy2.width</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
        <structure>
            <property name="name">DataCube.Month.NewTabularHierarchy2.height</property>
            <property name="type">integer</property>
            <property name="isVisible">false</property>
        </structure>
    </list-property>
    <property name="DataCube.Sales.x">432</property>
    <property name="DataCube.Sales.y">83</property>
    <property name="DataCube.Month.NewTabularHierarchy2.x">137</property>
    <property name="DataCube.Month.NewTabularHierarchy2.y">73</property>
    <property name="DataCube.Sales.width">150</property>
    <property name="DataCube.Sales.height">200</property>
    <property name="DataCube.Month.NewTabularHierarchy2.width">150</property>
    <property name="DataCube.Month.NewTabularHierarchy2.height">200</property>
    <simple-property-list name="includeResource">
        <value>demo/localization/birtLanguage-ext</value>
    </simple-property-list>
    <list-property name="includeScripts">
        <property>commons/javascript/debugWindow.js</property>
        <property>commons/javascript/functionsBirt.js</property>
    </list-property>
    <list-property name="propertyBindings">
        <structure>
            <property name="name">queryText</property>
            <property name="id">4628</property>
            <expression name="value" type="javascript">var select    = "select  CLASSICMODELS.OFFICES.CITY,CLASSICMODELS.OFFICES.OFFICECODE,CLASSICMODELS.PRODUCTS.PRODUCTVENDOR,YEAR(CLASSICMODELS.ORDERS.ORDERDATE) YEAR_SALE,MONTH(CLASSICMODELS.ORDERS.ORDERDATE) MONTH_SALE,sum(CLASSICMODELS.ORDERDETAILS.QUANTITYORDERED) QUANTITY,sum(CLASSICMODELS.ORDERDETAILS.QUANTITYORDERED*CLASSICMODELS.ORDERDETAILS.PRICEEACH) AMOUNT";&#13;
var from     = " from CLASSICMODELS.ORDERDETAILS,CLASSICMODELS.ORDERS,CLASSICMODELS.CUSTOMERS,CLASSICMODELS.EMPLOYEES, CLASSICMODELS.OFFICES, CLASSICMODELS.PRODUCTS ";&#13;
var where   = " where CLASSICMODELS.ORDERDETAILS.ORDERNUMBER=CLASSICMODELS.ORDERS.ORDERNUMBER and   CLASSICMODELS.CUSTOMERS.CUSTOMERNUMBER=CLASSICMODELS.ORDERS.CUSTOMERNUMBER and   CLASSICMODELS.EMPLOYEES.EMPLOYEENUMBER=CLASSICMODELS.CUSTOMERS.SALESREPEMPLOYEENUMBER and   CLASSICMODELS.OFFICES.OFFICECODE=CLASSICMODELS.EMPLOYEES.OFFICECODE and  CLASSICMODELS.PRODUCTS.PRODUCTCODE=CLASSICMODELS.ORDERDETAILS.PRODUCTCODE and YEAR(CLASSICMODELS.ORDERS.ORDERDATE)+6>= "+(params["Year"].value-1);&#13;
var groupby=" group by CLASSICMODELS.OFFICES.CITY,CLASSICMODELS.OFFICES.OFFICECODE,YEAR(CLASSICMODELS.ORDERS.ORDERDATE),CLASSICMODELS.PRODUCTS.PRODUCTVENDOR,MONTH(CLASSICMODELS.ORDERS.ORDERDATE) ORDER BY YEAR_SALE, MONTH_SALE ";&#13;
var office ="";&#13;
if (params["Office"].value != "ALL"){&#13;
		var officecode =  params["Office"].value.split(':')[0];&#13;
		office = " and CLASSICMODELS.OFFICES.OFFICECODE='"+officecode+"'"&#13;
}&#13;
var product = "";&#13;
//logToDebugWindow(params["Product"].value[0]);&#13;
if (params["Product"].value!=null &amp;&amp; params["Product"].value[0]!=null &amp;&amp; strproducts!=null &amp;&amp; strproducts.length!=0 &amp;&amp; params["Product"].value.join(":")!='ALL'){product = " and CLASSICMODELS.ORDERDETAILS.PRODUCTCODE in("+IN_string(params["Product"].value) +")"};&#13;
//logToDebugWindow(select+from+where+office+product+groupby);&#13;
select+from+where+office+product+groupby;</expression>
        </structure>
        <structure>
            <property name="name">queryTimeOut</property>
            <property name="id">4628</property>
        </structure>
        <structure>
            <property name="name">rowFetchSize</property>
            <property name="id">4628</property>
        </structure>
    </list-property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[if (params["Product"].value!=null){
	productList = params["Product"].value.join(",");
	strproducts = params["Product"].value.join("");
} else {
	productList = "";
	strproducts = "";
}

]]></method>
    <method name="onPrepare"><![CDATA[
]]></method>
    <method name="beforeFactory"><![CDATA[reportContext.getDesignHandle().setThemeName(params["Theme"].value);]]></method>
    <method name="afterFactory"><![CDATA[

]]></method>
    <method name="beforeRender"><![CDATA[importPackage(Packages.org.visioneo.utils);

var aggMonths = new VisioAggMonth();
aggMonths.setLocale(reportContext.getLocale());
renderLocaleMonthDesc = aggMonths.getMonthShortDesc();
//renderLocaleViewDesc = aggMonths.getViewDesc();
renderLocaleMonthLongDesc = aggMonths.getMonthLongDesc();

]]></method>
    <property name="theme">visioneo-commons.VisioOcean</property>
    <text-property name="displayName" key="report.crosstabledrill.displayname">Sales cross-table by product vendor</text-property>
    <property name="iconFile">C:\Users\dpardon\Pictures\visioneo\thumbnail-birt\thumbnail-crosstab-running.png</property>
    <property name="layoutPreference">auto layout</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <list-property name="libraries">
        <structure>
            <property name="fileName">commons/libraries/visioneo-commons.rptlibrary</property>
            <property name="namespace">visioneo-commons</property>
        </structure>
    </list-property>
    <parameters>
        <scalar-parameter name="Year" id="139">
            <text-property name="helpText" key="param.year.help">Select sales year</text-property>
            <text-property name="promptText" key="param.year.prompt">Year</text-property>
            <property name="valueType">dynamic</property>
            <property name="dataSetName">Year</property>
            <expression name="valueExpr" type="javascript">dataSetRow["YEAR_ORDER"]</expression>
            <expression name="labelExpr" type="javascript">dataSetRow["YEAR_ORDER"]</expression>
            <expression name="sortByColumn">dataSetRow["YEAR_ORDER"]</expression>
            <property name="sortDirection">desc</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">2012</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">false</property>
            <property name="fixedOrder">false</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="View" id="3278">
            <list-property name="userProperties">
                <structure>
                    <property name="name">__RENDERING</property>
                    <property name="type">boolean</property>
                </structure>
            </list-property>
            <property name="__RENDERING">true</property>
            <property name="hidden">false</property>
            <text-property name="helpText" key="param.view.help">Select your view. Year-to-date option aggregates  your data from january to each month of year.</text-property>
            <text-property name="promptText" key="param.view.prompt">View</text-property>
            <property name="valueType">static</property>
            <property name="isRequired">true</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">MON</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">MON</property>
                    <property name="label">Périodes mensuelles</property>
                    <property name="labelID">param.view.monthly</property>
                </structure>
                <structure>
                    <property name="value">YTD</property>
                    <property name="label">Périodes cumulées</property>
                    <property name="labelID">param.view.ytd</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">radio-button</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="Measure" id="3686">
            <list-property name="userProperties">
                <structure>
                    <property name="name">__RENDERING</property>
                    <property name="type">boolean</property>
                </structure>
            </list-property>
            <property name="__RENDERING">true</property>
            <text-property name="helpText" key="param.measure.help">Select your measure</text-property>
            <text-property name="promptText" key="param.measure.prompt">Measure</text-property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">UNIT</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">UNIT</property>
                    <property name="label">Quantité vendue</property>
                    <property name="labelID">param.measure.unit</property>
                </structure>
                <structure>
                    <property name="value">AMOUNT</property>
                    <property name="label">Chiffre d'affaires €</property>
                    <property name="labelID">param.measure.revenue</property>
                </structure>
                <structure>
                    <property name="value">AMOUNT_K</property>
                    <property name="label">Chiffre d'affaires K€</property>
                    <property name="labelID">param.measure.revenuek</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">false</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="Office" id="3683">
            <property name="hidden">true</property>
            <text-property name="helpText">Select an office</text-property>
            <text-property name="promptText">Business office</text-property>
            <property name="valueType">dynamic</property>
            <property name="isRequired">false</property>
            <property name="dataSetName">Office</property>
            <expression name="valueExpr" type="javascript">dataSetRow["OFFICECODE"]+":"+dataSetRow["CITY"]</expression>
            <expression name="labelExpr" type="javascript">dataSetRow["CITY"]</expression>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">ALL</value>
            </simple-property-list>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="Product" id="3684">
            <text-property name="helpText" key="param.product.help">Select your product(s) or "All values"</text-property>
            <text-property name="promptText" key="param.product.prompt">Product</text-property>
            <property name="valueType">dynamic</property>
            <property name="isRequired">false</property>
            <property name="dataSetName">Products</property>
            <expression name="valueExpr" type="javascript">dataSetRow["PRODUCTCODE"]</expression>
            <expression name="labelExpr" type="javascript">dataSetRow["PRODUCTNAME"]</expression>
            <expression name="sortByColumn">dataSetRow["PRODUCTCODE"]</expression>
            <property name="sortDirection">asc</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">multi-value</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">true</property>
            <property name="fixedOrder">false</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="Theme" id="4903">
            <list-property name="userProperties">
                <structure>
                    <property name="name">__RENDERING</property>
                    <property name="type">boolean</property>
                </structure>
            </list-property>
            <property name="__RENDERING">false</property>
            <text-property name="helpText">Select a theme to apply different styles on your report</text-property>
            <text-property name="promptText">Theme</text-property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <simple-property-list name="defaultValue">
                <value type="constant">visioneo-commons.VisioOcean</value>
            </simple-property-list>
            <list-property name="selectionList">
                <structure>
                    <property name="value">visioneo-commons.Visioneo</property>
                    <property name="label">Dark</property>
                </structure>
                <structure>
                    <property name="value">visioneo-commons.VisioLightness</property>
                    <property name="label">Lightness</property>
                </structure>
                <structure>
                    <property name="value">visioneo-commons.VisioOcean</property>
                    <property name="label">Ocean</property>
                </structure>
                <structure>
                    <property name="value">visioneo-commons.VisioCountry</property>
                    <property name="label">Country</property>
                </structure>
            </list-property>
            <property name="paramType">simple</property>
            <property name="controlType">list-box</property>
            <property name="mustMatch">false</property>
            <property name="fixedOrder">true</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <parameter-group name="visioneo-commons" id="4756" extends="visioneo-commons.visioneo-commons">
            <overridden-values>
                <ref-entry baseId="3276" name="__windowstate" id="3276"/>
                <ref-entry baseId="3277" name="__securityfield" id="3277"/>
                <ref-entry baseId="3257" name="__width" id="3257"/>
                <ref-entry baseId="3258" name="__height" id="3258"/>
                <ref-entry baseId="3414" name="__locale" id="3414"/>
                <ref-entry baseId="3415" name="__debugg" id="3415">
                    <property name="paramType">simple</property>
                    <structure name="format"/>
                    <property name="controlType">check-box</property>
                    <simple-property-list name="defaultValue">
                        <value type="constant">False</value>
                    </simple-property-list>
                    <property name="valueType">static</property>
                    <list-property name="selectionList"/>
                    <property name="dataType">boolean</property>
                    <property name="distinct">true</property>
                    <property name="helpText">With this parameter you can enable/disable a table at the top of your report, wich reviews all parameter map</property>
                    <property name="promptText">Debugging mode</property>
                    <property name="hidden">true</property>
                </ref-entry>
                <ref-entry baseId="5308" name="__useLogging" id="5308"/>
                <ref-entry baseId="5309" name="__namespace" id="5309"/>
            </overridden-values>
        </parameter-group>
    </parameters>
    <data-sources>
        <script-data-source name="Data Source" id="7"/>
        <oda-data-source extensionID="org.eclipse.birt.report.data.oda.jdbc" name="Eclipse" id="4627">
            <list-property name="privateDriverProperties">
                <ex-property>
                    <name>contentBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
                <ex-property>
                    <name>metadataBidiFormatStr</name>
                    <value>ILYNN</value>
                </ex-property>
            </list-property>
            <property name="odaDriverClass">org.eclipse.birt.report.data.oda.sampledb.Driver</property>
            <property name="odaURL">jdbc:classicmodels:sampledb</property>
            <property name="odaUser">ClassicModels</property>
        </oda-data-source>
    </data-sources>
    <data-sets>
        <script-data-set name="Month" id="8">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">id</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">shortid</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">shortdesc</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">desc</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">id</property>
                </structure>
                <structure>
                    <property name="columnName">shortid</property>
                </structure>
                <structure>
                    <property name="columnName">shortdesc</property>
                </structure>
                <structure>
                    <property name="columnName">desc</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">id</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">shortid</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">shortdesc</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">desc</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Data Source</property>
            <method name="open"><![CDATA[i = 0;

sourcedata = new Array( new Array(4),
					 	new Array(4),
					 	new Array(4),
					 	new Array(4),
					 	new Array(4),
					 	new Array(4),
					 	new Array(4),
					 	new Array(4),
					 	new Array(4),
					 	new Array(4),
					 	new Array(4),
					 	new Array(4));
				 	
sourcedata[0][0] = 1;
sourcedata[0][1] = "01";
sourcedata[0][2] = "Jan";
sourcedata[0][3] = "January";

sourcedata[1][0] = 2;
sourcedata[1][1] = "02";
sourcedata[1][2] = "Feb";
sourcedata[1][3] = "February";

sourcedata[2][0] = 3;
sourcedata[2][1] = "03";
sourcedata[2][2] = "Mar";
sourcedata[2][3] = "March";

sourcedata[3][0] = 4;
sourcedata[3][1] = "04";
sourcedata[3][2] = "Apr";
sourcedata[3][3] = "April";

sourcedata[4][0] = 5;
sourcedata[4][1] = "05";
sourcedata[4][2] = "May";
sourcedata[4][3] = "May";

sourcedata[5][0] = 6;
sourcedata[5][1] = "06";
sourcedata[5][2] = "Jun";
sourcedata[5][3] = "Jun";

sourcedata[6][0] = 7;
sourcedata[6][1] = "07";
sourcedata[6][2] = "Jul";
sourcedata[6][3] = "Jul";

sourcedata[7][0] = 8;
sourcedata[7][1] = "08";
sourcedata[7][2] = "Aug";
sourcedata[7][3] = "Aug";

sourcedata[8][0] = 9;
sourcedata[8][1] = "09";
sourcedata[8][2] = "Sep";
sourcedata[8][3] = "Sep";

sourcedata[9][0] = 10;
sourcedata[9][1] = "10";
sourcedata[9][2] = "Oct";
sourcedata[9][3] = "Oct";

sourcedata[10][0] = 11;
sourcedata[10][1] = "11";
sourcedata[10][2] = "Nov";
sourcedata[10][3] = "Nov";

sourcedata[11][0] = 12;
sourcedata[11][1] = "12";
sourcedata[11][2] = "Dec";
sourcedata[11][3] = "Dec";]]></method>
            <method name="fetch"><![CDATA[if ( i < 12 )
{
	row["id"] = sourcedata[i][0];
	row["shortid"] = sourcedata[i][1];
	row["shortdesc"]= sourcedata[i][2];
	row["desc"]= sourcedata[i][3];
	
	i++;
	return true;
}
	return false;]]></method>
        </script-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="Office" id="3682">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">OFFICECODE</property>
                    <property name="analysis">attribute</property>
                    <text-property name="displayName">OFFICECODE</text-property>
                    <text-property name="heading">OFFICECODE</text-property>
                </structure>
                <structure>
                    <property name="columnName">CITY</property>
                    <property name="analysis">attribute</property>
                    <text-property name="displayName">CITY</text-property>
                    <text-property name="heading">CITY</text-property>
                </structure>
            </list-property>
            <list-property name="parameters"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">OFFICECODE</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">CITY</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Eclipse</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">OFFICECODE</property>
                    <property name="nativeName">OFFICECODE</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">CITY</property>
                    <property name="nativeName">CITY</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select CLASSICMODELS.OFFICES.OFFICECODE, CLASSICMODELS.OFFICES.CITY
from CLASSICMODELS.OFFICES
order by  CLASSICMODELS.OFFICES.CITY]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>COUNTRY</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
            <design:precision>50</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>COUNTRY</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>COUNTRY</design:label>
            <design:formattingHints>
              <design:displaySize>50</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="Products" id="49">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">PRODUCTCODE</property>
                    <property name="analysis">attribute</property>
                    <text-property name="displayName">PRODUCTCODE</text-property>
                    <text-property name="heading">PRODUCTCODE</text-property>
                </structure>
                <structure>
                    <property name="columnName">PRODUCTNAME</property>
                    <property name="analysis">attribute</property>
                    <text-property name="displayName">PRODUCTNAME</text-property>
                    <text-property name="heading">PRODUCTNAME</text-property>
                </structure>
                <structure>
                    <property name="columnName">PRODUCTVENDOR</property>
                    <property name="analysis">attribute</property>
                    <text-property name="displayName">PRODUCTVENDOR</text-property>
                    <text-property name="heading">PRODUCTVENDOR</text-property>
                </structure>
                <structure>
                    <property name="columnName">BUYPRICE</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">BUYPRICE</text-property>
                    <text-property name="heading">BUYPRICE</text-property>
                </structure>
            </list-property>
            <list-property name="parameters"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">PRODUCTCODE</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">PRODUCTNAME</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">PRODUCTVENDOR</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">BUYPRICE</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <method name="onFetch"><![CDATA[
if (typeof(productList) != 'undefined' &amp;&amp; productList.indexOf(row["PRODUCTCODE"].toString()) != null){
	productList = productList.replace(row["PRODUCTCODE"].toString(),row["PRODUCTNAME"]);
}]]></method>
            <property name="dataSource">Eclipse</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">PRODUCTCODE</property>
                    <property name="nativeName">PRODUCTCODE</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">PRODUCTNAME</property>
                    <property name="nativeName">PRODUCTNAME</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">PRODUCTVENDOR</property>
                    <property name="nativeName">PRODUCTVENDOR</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">BUYPRICE</property>
                    <property name="nativeName">BUYPRICE</property>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select CLASSICMODELS.PRODUCTS.PRODUCTCODE,
	   CLASSICMODELS.PRODUCTS.PRODUCTNAME,
	   CLASSICMODELS.PRODUCTS.PRODUCTVENDOR,
	   CLASSICMODELS.PRODUCTS.BUYPRICE
from   CLASSICMODELS.PRODUCTS
]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="Sales" id="4628">
            <property name="nullsOrdering">nulls lowest</property>
            <list-property name="computedColumns">
                <structure>
                    <property name="name">quantityY</property>
                    <expression name="expression">(row["YEAR_SALE"]==params["Year"].value) ? row["QUANTITY"] : 0;</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">amountY</property>
                    <expression name="expression">row["YEAR_SALE"]==params["Year"].value ? row["AMOUNT"] : 0;</expression>
                    <property name="dataType">float</property>
                </structure>
                <structure>
                    <property name="name">quantityY-1</property>
                    <expression name="expression">row["YEAR_SALE"]==params["Year"].value - 1? row["QUANTITY"] : 0;</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">amountY-1</property>
                    <expression name="expression">row["YEAR_SALE"]==params["Year"].value - 1? row["AMOUNT"] : 0;</expression>
                    <property name="dataType">float</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">CITY</property>
                    <property name="analysis">attribute</property>
                    <text-property name="displayName">CITY</text-property>
                    <text-property name="heading">CITY</text-property>
                </structure>
                <structure>
                    <property name="columnName">OFFICECODE</property>
                    <property name="analysis">attribute</property>
                    <text-property name="displayName">OFFICECODE</text-property>
                    <text-property name="heading">OFFICECODE</text-property>
                </structure>
                <structure>
                    <property name="columnName">PRODUCTVENDOR</property>
                    <property name="analysis">attribute</property>
                    <text-property name="displayName">PRODUCTVENDOR</text-property>
                    <text-property name="heading">PRODUCTVENDOR</text-property>
                </structure>
                <structure>
                    <property name="columnName">YEAR_SALE</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">YEAR_SALE</text-property>
                    <text-property name="heading">YEAR_SALE</text-property>
                </structure>
                <structure>
                    <property name="columnName">MONTH_SALE</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">MONTH_SALE</text-property>
                    <text-property name="heading">MONTH_SALE</text-property>
                </structure>
                <structure>
                    <property name="columnName">QUANTITY</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">QUANTITY</text-property>
                    <text-property name="heading">QUANTITY</text-property>
                </structure>
                <structure>
                    <property name="columnName">AMOUNT</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">AMOUNT</text-property>
                    <text-property name="heading">AMOUNT</text-property>
                </structure>
            </list-property>
            <list-property name="parameters"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">CITY</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">OFFICECODE</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">PRODUCTVENDOR</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">YEAR_SALE</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">MONTH_SALE</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">QUANTITY</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">AMOUNT</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">quantityY</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">amountY</property>
                        <property name="dataType">float</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">quantityY-1</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">amountY-1</property>
                        <property name="dataType">float</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Eclipse</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">CITY</property>
                    <property name="nativeName">CITY</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">OFFICECODE</property>
                    <property name="nativeName">OFFICECODE</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">PRODUCTVENDOR</property>
                    <property name="nativeName">PRODUCTVENDOR</property>
                    <property name="dataType">string</property>
                    <property name="nativeDataType">12</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">YEAR_SALE</property>
                    <property name="nativeName">YEAR_SALE</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">MONTH_SALE</property>
                    <property name="nativeName">MONTH_SALE</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">QUANTITY</property>
                    <property name="nativeName">QUANTITY</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">AMOUNT</property>
                    <property name="nativeName">AMOUNT</property>
                    <property name="dataType">float</property>
                    <property name="nativeDataType">8</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select  CLASSICMODELS.OFFICES.CITY,
		CLASSICMODELS.OFFICES.OFFICECODE,
		CLASSICMODELS.PRODUCTS.PRODUCTVENDOR,
		YEAR(CLASSICMODELS.ORDERS.ORDERDATE) YEAR_SALE,
		MONTH(CLASSICMODELS.ORDERS.ORDERDATE) MONTH_SALE,
		sum(CLASSICMODELS.ORDERDETAILS.QUANTITYORDERED) QUANTITY, 
		sum(CLASSICMODELS.ORDERDETAILS.QUANTITYORDERED*CLASSICMODELS.ORDERDETAILS.PRICEEACH) AMOUNT
from CLASSICMODELS.ORDERDETAILS, 
     CLASSICMODELS.ORDERS,
     CLASSICMODELS.CUSTOMERS,
     CLASSICMODELS.EMPLOYEES,
     CLASSICMODELS.OFFICES,
     CLASSICMODELS.PRODUCTS
where CLASSICMODELS.ORDERDETAILS.ORDERNUMBER=CLASSICMODELS.ORDERS.ORDERNUMBER
and   CLASSICMODELS.CUSTOMERS.CUSTOMERNUMBER=CLASSICMODELS.ORDERS.CUSTOMERNUMBER
and   CLASSICMODELS.EMPLOYEES.EMPLOYEENUMBER=CLASSICMODELS.CUSTOMERS.SALESREPEMPLOYEENUMBER
and   CLASSICMODELS.OFFICES.OFFICECODE=CLASSICMODELS.EMPLOYEES.OFFICECODE
and   CLASSICMODELS.PRODUCTS.PRODUCTCODE=CLASSICMODELS.ORDERDETAILS.PRODUCTCODE
and   YEAR(CLASSICMODELS.ORDERS.ORDERDATE)>=2009
group by CLASSICMODELS.OFFICES.CITY,
		CLASSICMODELS.OFFICES.OFFICECODE,
		CLASSICMODELS.PRODUCTS.PRODUCTVENDOR,
		YEAR(CLASSICMODELS.ORDERS.ORDERDATE),		
		MONTH(CLASSICMODELS.ORDERS.ORDERDATE)
ORDER BY YEAR_SALE, MONTH_SALE]]></xml-property>
        </oda-data-set>
        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="Year" id="138">
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">YEAR_ORDER</property>
                    <property name="analysis">measure</property>
                    <text-property name="displayName">YEAR_ORDER</text-property>
                    <text-property name="heading">YEAR_ORDER</text-property>
                </structure>
            </list-property>
            <list-property name="parameters"/>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">YEAR_ORDER</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Eclipse</property>
            <list-property name="resultSet">
                <structure>
                    <property name="position">1</property>
                    <property name="name">YEAR_ORDER</property>
                    <property name="nativeName">YEAR_ORDER</property>
                    <property name="dataType">integer</property>
                    <property name="nativeDataType">4</property>
                </structure>
            </list-property>
            <xml-property name="queryText"><![CDATA[select distinct YEAR(CLASSICMODELS.ORDERS.ORDERDATE) YEAR_ORDER
from CLASSICMODELS.ORDERS
order by YEAR_ORDER desc]]></xml-property>
            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
  <Version>2.0</Version>
  <design:ResultSets derivedMetaData="true">
    <design:resultSetDefinitions>
      <design:resultSetColumns>
        <design:resultColumnDefinitions>
          <design:attributes>
            <design:identifier>
              <design:name>YEAR_ORDER</design:name>
              <design:position>1</design:position>
            </design:identifier>
            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
            <design:precision>10</design:precision>
            <design:scale>0</design:scale>
            <design:nullability>Nullable</design:nullability>
            <design:uiHints>
              <design:displayName>YEAR_ORDER</design:displayName>
            </design:uiHints>
          </design:attributes>
          <design:usageHints>
            <design:label>YEAR_ORDER</design:label>
            <design:formattingHints>
              <design:displaySize>11</design:displaySize>
            </design:formattingHints>
          </design:usageHints>
        </design:resultColumnDefinitions>
      </design:resultSetColumns>
      <design:criteria/>
    </design:resultSetDefinitions>
  </design:ResultSets>
</model:DesignValues>]]></xml-property>
        </oda-data-set>
    </data-sets>
    <cubes>
        <tabular-cube name="DataCube" id="4629">
            <property name="dimensions">
                <tabular-dimension name="Office" id="4630">
                    <property name="defaultHierarchy">NewTabularHierarchy</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy" id="4631">
                            <property name="levels">
                                <tabular-level name="CITY" id="4632">
                                    <property name="dataType">string</property>
                                    <property name="levelType">dynamic</property>
                                    <list-property name="attributes">
                                        <structure>
                                            <property name="name">OFFICECODE</property>
                                            <property name="dataType">string</property>
                                        </structure>
                                    </list-property>
                                    <property name="columnName">CITY</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Vendor" id="4633">
                    <property name="defaultHierarchy">NewTabularHierarchy1</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy1" id="4634">
                            <property name="levels">
                                <tabular-level name="PRODUCTVENDOR" id="4635">
                                    <property name="dataType">string</property>
                                    <property name="columnName">PRODUCTVENDOR</property>
                                </tabular-level>
                            </property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
                <tabular-dimension name="Month" id="4636">
                    <property name="defaultHierarchy">NewTabularHierarchy2</property>
                    <property name="hierarchies">
                        <tabular-hierarchy name="NewTabularHierarchy2" id="4637">
                            <property name="levels">
                                <tabular-level name="monthID" id="4638">
                                    <property name="dataType">integer</property>
                                    <property name="levelType">dynamic</property>
                                    <list-property name="attributes">
                                        <structure>
                                            <property name="name">shortid</property>
                                            <property name="dataType">string</property>
                                        </structure>
                                        <structure>
                                            <property name="name">desc</property>
                                            <property name="dataType">string</property>
                                        </structure>
                                    </list-property>
                                    <property name="columnName">id</property>
                                    <expression name="displayColumnName" type="javascript">dataSetRow["shortdesc"]</expression>
                                </tabular-level>
                            </property>
                            <property name="dataSet">Month</property>
                        </tabular-hierarchy>
                    </property>
                </tabular-dimension>
            </property>
            <property name="measureGroups">
                <tabular-measure-group name="qty" id="4655">
                    <property name="measures">
                        <tabular-measure name="quantityY" id="4656">
                            <property name="function">sum</property>
                            <property name="isCalculated">false</property>
                            <expression name="measureExpression" type="javascript">dataSetRow["quantityY"]</expression>
                            <property name="dataType">integer</property>
                            <property name="isVisible">true</property>
                        </tabular-measure>
                    </property>
                </tabular-measure-group>
                <tabular-measure-group name="qty-1" id="4731">
                    <property name="measures">
                        <tabular-measure name="quantityY-1" id="4732">
                            <property name="function">sum</property>
                            <property name="isCalculated">false</property>
                            <expression name="measureExpression" type="javascript">dataSetRow["quantityY-1"]</expression>
                            <property name="dataType">integer</property>
                            <property name="isVisible">true</property>
                        </tabular-measure>
                    </property>
                </tabular-measure-group>
                <tabular-measure-group name="amount" id="4775">
                    <property name="measures">
                        <tabular-measure name="amountY" id="4776">
                            <expression name="measureExpression" type="javascript">dataSetRow["amountY"]</expression>
                            <property name="dataType">float</property>
                        </tabular-measure>
                    </property>
                </tabular-measure-group>
                <tabular-measure-group name="amount-1" id="4848">
                    <property name="measures">
                        <tabular-measure name="amountY-1" id="4849">
                            <expression name="measureExpression" type="javascript">dataSetRow["amountY-1"]</expression>
                            <property name="dataType">float</property>
                        </tabular-measure>
                    </property>
                </tabular-measure-group>
            </property>
            <property name="dataSet">Sales</property>
            <list-property name="dimensionConditions">
                <structure>
                    <list-property name="joinConditions">
                        <structure>
                            <property name="cubeKey">MONTH_SALE</property>
                            <property name="hierarchyKey">id</property>
                        </structure>
                    </list-property>
                    <property name="hierarchy">NewTabularHierarchy2</property>
                </structure>
            </list-property>
        </tabular-cube>
    </cubes>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab-cell" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="orientation">landscape</property>
            <property name="showHeaderOnFirst">false</property>
            <property name="showFooterOnLast">false</property>
            <page-footer>
                <text id="3">
                    <property name="contentType">html</property>
                    <text-property name="content"><![CDATA[<value-of>new Date()</value-of>]]></text-property>
                </text>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <extended-item extensionName="Crosstab" extensionVersion="3.7.0" name="VisioRunningTable"
 id="4639">
            <property name="cube">DataCube</property>
            <property name="measures">
                <extended-item extensionName="MeasureView" id="4657">
                    <property name="measure">quantityY</property>
                    <property name="detail">
                        <extended-item extensionName="AggregationCell" id="4658">
                            <property name="aggregationOnRow">Vendor/PRODUCTVENDOR</property>
                            <property name="aggregationOnColumn">Month/monthID</property>
                            <property name="width">5%</property>
                            <property name="content">
                                <data id="4659">
                                    <method name="onRender"><![CDATA[var val = visioGetMeasureValue("_Vendor/PRODUCTVENDOR_Month/monthID", reportContext,"");
visioRunningValueData(this, reportContext, val, dimension["Month"]["monthID"]["shortid"], "0");]]></method>
                                    <property name="resultSetColumn">quantityY_Vendor/PRODUCTVENDOR_Month/monthID</property>
                                </data>
                            </property>
                        </extended-item>
                    </property>
                    <property name="aggregations">
                        <extended-item extensionName="AggregationCell" id="4671">
                            <property name="aggregationOnColumn">Month/monthID</property>
                            <property name="content">
                                <data id="4672">
                                    <property name="marginTop">3pt</property>
                                    <method name="onRender"><![CDATA[var val = visioGetMeasureValue("_Month/monthID", reportContext,"");
var cum = visioRunningValueData(this, reportContext, val, dimension["Month"]["monthID"]["shortid"],"0");]]></method>
                                    <property name="resultSetColumn">quantityY_Month/monthID</property>
                                </data>
                                <data id="4887">
                                    <property name="marginTop">3pt</property>
                                    <property name="marginBottom">3pt</property>
                                    <method name="onRender"><![CDATA[var val = visioGetMeasureValue("_Month/monthID", reportContext,"-1");
var cum = visioRunningValueData(this, reportContext, val, dimension["Month"]["monthID"]["shortid"],"-1");]]></method>
                                    <property name="resultSetColumn">quantityY_Month/monthID</property>
                                </data>
                            </property>
                            <property name="style">TotalCrossTab</property>
                        </extended-item>
                        <extended-item extensionName="AggregationCell" id="4677">
                            <property name="aggregationOnRow">Vendor/PRODUCTVENDOR</property>
                            <property name="width">10%</property>
                            <property name="content">
                                <grid id="4896">
                                    <column id="4897">
                                        <property name="textAlign">center</property>
                                        <property name="width">70%</property>
                                    </column>
                                    <column id="4898"/>
                                    <row id="4899">
                                        <cell id="4900">
                                            <data id="4885">
                                                <property name="textAlign">center</property>
                                                <method name="onRender"><![CDATA[this.setDisplayValue(visioGetMeasureValue("_Vendor/PRODUCTVENDOR", reportContext,""));]]></method>
                                                <property name="resultSetColumn">quantityY_Office/CITY_1</property>
                                            </data>
                                        </cell>
                                        <cell id="4901">
                                            <data id="4902">
                                                <property name="style">crosstab-row-header-lvl2</property>
                                                <property name="fontSize">7pt</property>
                                                <property name="marginLeft">0pt</property>
                                                <property name="paddingLeft">1pt</property>
                                                <structure name="numberFormat">
                                                    <property name="category">Percent</property>
                                                    <property name="pattern">###0.0%{RoundingMode=HALF_UP}</property>
                                                </structure>
                                                <method name="onRender"><![CDATA[var total = visioGetMeasureValue("_Office/CITY", reportContext,"");
var current = visioGetMeasureValue("_Vendor/PRODUCTVENDOR", reportContext,"");
this.setDisplayValue((current/total));]]></method>
                                                <property name="resultSetColumn">quantityY_Office/CITY_1</property>
                                            </data>
                                        </cell>
                                    </row>
                                </grid>
                            </property>
                            <property name="style">highlight-table</property>
                        </extended-item>
                        <extended-item extensionName="AggregationCell" id="4679">
                            <property name="content">
                                <data id="4886">
                                    <property name="marginTop">3pt</property>
                                    <method name="onRender"><![CDATA[this.setDisplayValue(visioGetMeasureValue("", reportContext,""));]]></method>
                                    <property name="resultSetColumn">quantityY_Office/CITY_1</property>
                                </data>
                                <data id="4888">
                                    <property name="marginTop">3pt</property>
                                    <property name="marginBottom">3pt</property>
                                    <method name="onRender"><![CDATA[this.setDisplayValue(visioGetMeasureValue("", reportContext,"-1"));]]></method>
                                    <property name="resultSetColumn">quantityY_Office/CITY_1</property>
                                </data>
                            </property>
                            <property name="style">crosstab-general-header</property>
                        </extended-item>
                        <extended-item extensionName="AggregationCell" id="4880">
                            <property name="aggregationOnRow">Office/CITY</property>
                            <property name="aggregationOnColumn">Month/monthID</property>
                            <property name="textAlign">center</property>
                            <property name="content">
                                <data id="4881">
                                    <property name="textAlign">center</property>
                                    <method name="onCreate"><![CDATA[
this.helpText = reportContext.getMessage("drillthrough.helptext", reportContext.getLocale());]]></method>
                                    <method name="onRender"><![CDATA[var val = visioGetMeasureValue("_Office/CITY_Month/monthID", reportContext,"");
visioRunningValueData(this, reportContext, val, dimension["Month"]["monthID"]["shortid"], "0");]]></method>
                                    <property name="resultSetColumn">quantityY_Office/CITY_Month/monthID_1</property>
                                    <list-property name="action">
                                        <structure>
                                            <property name="linkType">drill-through</property>
                                            <property name="reportName">salesDetails.rptdesign</property>
                                            <property name="targetWindow">_parent</property>
                                            <property name="targetFileType">report-design</property>
                                            <list-property name="paramBindings">
                                                <structure>
                                                    <property name="paramName">Month</property>
                                                    <simple-property-list name="expression">
                                                        <value type="javascript">data["monthNumber"]</value>
                                                    </simple-property-list>
                                                </structure>
                                                <structure>
                                                    <property name="paramName">Year</property>
                                                    <simple-property-list name="expression">
                                                        <value type="javascript">params["Year"].value</value>
                                                    </simple-property-list>
                                                </structure>
                                                <structure>
                                                    <property name="paramName">Office</property>
                                                    <simple-property-list name="expression">
                                                        <value type="javascript">data["officecode"]</value>
                                                    </simple-property-list>
                                                </structure>
                                                <structure>
                                                    <property name="paramName">Product</property>
                                                    <simple-property-list name="expression">
                                                        <value type="javascript">MultiValue_toString(params["Product"].value);</value>
                                                    </simple-property-list>
                                                </structure>
                                            </list-property>
                                        </structure>
                                    </list-property>
                                </data>
                            </property>
                        </extended-item>
                        <extended-item extensionName="AggregationCell" id="4882">
                            <property name="aggregationOnRow">Office/CITY</property>
                            <property name="content">
                                <grid id="4890">
                                    <column id="4891">
                                        <property name="textAlign">center</property>
                                        <property name="width">60%</property>
                                    </column>
                                    <column id="4892"/>
                                    <row id="4893">
                                        <cell id="4894">
                                            <data id="4883">
                                                <property name="textAlign">center</property>
                                                <method name="onRender"><![CDATA[this.setDisplayValue(visioGetMeasureValue("_Office/CITY", reportContext,""));]]></method>
                                                <property name="resultSetColumn">quantityY_Office/CITY_1</property>
                                            </data>
                                        </cell>
                                        <cell id="4895">
                                            <data id="4889">
                                                <property name="style">crosstab-row-header-lvl2</property>
                                                <property name="fontSize">7pt</property>
                                                <property name="marginLeft">10px</property>
                                                <property name="paddingLeft">1pt</property>
                                                <structure name="numberFormat">
                                                    <property name="category">Percent</property>
                                                    <property name="pattern">###0.0%{RoundingMode=HALF_UP}</property>
                                                </structure>
                                                <method name="onRender"><![CDATA[var total = visioGetMeasureValue("", reportContext,"");
var current = visioGetMeasureValue("_Office/CITY", reportContext,"");
this.setDisplayValue((current/total));]]></method>
                                                <property name="resultSetColumn">quantityY_Office/CITY_1</property>
                                            </data>
                                        </cell>
                                    </row>
                                </grid>
                            </property>
                            <property name="style">TotalCrossTab</property>
                        </extended-item>
                    </property>
                    <property name="header">
                        <extended-item extensionName="CrosstabCell" id="4660">
                            <property name="height">0%</property>
                        </extended-item>
                        <extended-item extensionName="CrosstabCell" id="4681"/>
                    </property>
                </extended-item>
            </property>
            <property name="rows">
                <extended-item extensionName="CrosstabView" id="4641">
                    <property name="grandTotal">
                        <extended-item extensionName="CrosstabCell" id="4670">
                            <property name="content">
                                <text-data id="4754">
                                    <property name="marginTop">3pt</property>
                                    <property name="textAlign">center</property>
                                    <expression name="valueExpr">"Total "+(params["Year"].value)</expression>
                                    <property name="contentType">html</property>
                                </text-data>
                                <text-data id="4755">
                                    <property name="marginTop">3pt</property>
                                    <property name="marginBottom">3pt</property>
                                    <property name="textAlign">center</property>
                                    <expression name="valueExpr">"Total "+(params["Year"].value-1)</expression>
                                    <property name="contentType">html</property>
                                </text-data>
                            </property>
                            <property name="textAlign">center</property>
                            <property name="style">crosstab-general-header</property>
                        </extended-item>
                    </property>
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="4642">
                            <property name="dimension">Office</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View" id="4643">
                                    <property name="level">Office/CITY</property>
                                    <property name="sort">
                                        <sort-element>
                                            <expression name="key" type="javascript">data["quantityY_Office/CITY"]</expression>
                                            <property name="direction">desc</property>
                                            <property name="strength">-1</property>
                                        </sort-element>
                                    </property>
                                    <property name="aggregationHeaderLocation">before</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4644">
                                            <property name="content">
                                                <data name="CITY" id="4645">
                                                    <property name="resultSetColumn">CITY</property>
                                                </data>
                                            </property>
                                            <property name="width">9%</property>
                                        </extended-item>
                                    </property>
                                    <property name="aggregationHeader">
                                        <extended-item extensionName="CrosstabCell" id="4879">
                                            <property name="content">
                                                <grid id="4852">
                                                    <column id="4853">
                                                        <list-property name="visibility">
                                                            <structure>
                                                                <property name="format">xls</property>
                                                                <expression name="valueExpr" type="javascript">true</expression>
                                                            </structure>
                                                            <structure>
                                                                <property name="format">postscript</property>
                                                                <expression name="valueExpr" type="javascript">true</expression>
                                                            </structure>
                                                            <structure>
                                                                <property name="format">pdf</property>
                                                                <expression name="valueExpr" type="javascript">true</expression>
                                                            </structure>
                                                            <structure>
                                                                <property name="format">doc</property>
                                                                <expression name="valueExpr" type="javascript">true</expression>
                                                            </structure>
                                                            <structure>
                                                                <property name="format">odp</property>
                                                                <expression name="valueExpr" type="javascript">true</expression>
                                                            </structure>
                                                            <structure>
                                                                <property name="format">ods</property>
                                                                <expression name="valueExpr" type="javascript">true</expression>
                                                            </structure>
                                                            <structure>
                                                                <property name="format">ppt</property>
                                                                <expression name="valueExpr" type="javascript">true</expression>
                                                            </structure>
                                                            <structure>
                                                                <property name="format">odt</property>
                                                                <expression name="valueExpr" type="javascript">true</expression>
                                                            </structure>
                                                        </list-property>
                                                        <property name="textAlign">left</property>
                                                    </column>
                                                    <column id="4854"/>
                                                    <row id="4855">
                                                        <property name="verticalAlign">middle</property>
                                                        <cell id="4856">
                                                            <text id="4858">
                                                                <method name="onRender"><![CDATA[try{
	visioneoSetButtonDrillable  (this,data["officecode"], reportContext.getMessage("drill.vendors"));
}catch (e) {
	this.text = "<small> <button>+</button> </small>";
}]]></method>
                                                                <property name="contentType">html</property>
                                                            </text>
                                                        </cell>
                                                        <cell id="4857">
                                                            <data name="CITY_TOTAL" id="4669">
                                                                <property name="resultSetColumn">CITY_TOTAL</property>
                                                            </data>
                                                        </cell>
                                                    </row>
                                                </grid>
                                            </property>
                                            <property name="style">TotalCrossTab</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                        <extended-item extensionName="DimensionView" id="4646">
                            <property name="dimension">Vendor</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View1" id="4647">
                                    <property name="level">Vendor/PRODUCTVENDOR</property>
                                    <property name="sort">
                                        <sort-element>
                                            <expression name="key" type="javascript">data["quantityY_Vendor/PRODUCTVENDOR"]</expression>
                                            <property name="direction">desc</property>
                                            <property name="strength">-1</property>
                                        </sort-element>
                                    </property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4648">
                                            <property name="content">
                                                <data name="PRODUCTVENDOR" id="4649">
                                                    <expression name="bookmark" type="javascript">"VisioLeaf_"+data["officecode"]+"_"+data["PRODUCTVENDOR"].replace(" ", "-")</expression>
                                                    <property name="resultSetColumn">PRODUCTVENDOR</property>
                                                </data>
                                            </property>
                                            <property name="width">14%</property>
                                            <property name="style">crosstab-row-header-lvl2</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                    <property name="grandTotalLocation">after</property>
                </extended-item>
            </property>
            <property name="columns">
                <extended-item extensionName="CrosstabView" id="4654">
                    <property name="grandTotal">
                        <extended-item extensionName="CrosstabCell" id="4674">
                            <property name="content">
                                <label id="4683">
                                    <property name="textAlign">center</property>
                                    <text-property name="text" key="param.year.prompt">Grand Total</text-property>
                                </label>
                            </property>
                            <property name="textAlign">center</property>
                            <property name="style">crosstab-general-header</property>
                        </extended-item>
                    </property>
                    <property name="views">
                        <extended-item extensionName="DimensionView" id="4662">
                            <property name="dimension">Month</property>
                            <property name="levels">
                                <extended-item extensionName="LevelView" name="NewLevel View2" id="4663">
                                    <property name="level">Month/monthID</property>
                                    <property name="member">
                                        <extended-item extensionName="CrosstabCell" id="4664">
                                            <property name="content">
                                                <label id="4905">
                                                    <property name="fontSize">10pt</property>
                                                    <property name="textAlign">center</property>
                                                    <method name="onRender"><![CDATA[this.text = renderLocaleMonthDesc[dimension["Month"]["monthID"]-1];
this.helpText = renderLocaleMonthLongDesc[dimension["Month"]["monthID"]-1];]]></method>
                                                    <text-property name="text">Month</text-property>
                                                </label>
                                            </property>
                                            <property name="textAlign">center</property>
                                            <property name="height">100%</property>
                                        </extended-item>
                                    </property>
                                </extended-item>
                            </property>
                        </extended-item>
                    </property>
                    <property name="grandTotalLocation">after</property>
                </extended-item>
            </property>
            <property name="header">
                <extended-item extensionName="CrosstabCell" id="4640">
                    <property name="content">
                        <grid id="4758">
                            <property name="style">crosstab-general-header</property>
                            <column id="4759">
                                <property name="textAlign">left</property>
                            </column>
                            <column id="4760"/>
                            <row id="4761">
                                <property name="textAlign">center</property>
                                <property name="verticalAlign">middle</property>
                                <cell id="4762">
                                    <image id="4685">
                                        <property name="height">48px</property>
                                        <property name="width">48px</property>
                                        <property name="source">file</property>
                                        <expression name="uri" type="constant">demo/img/pie.png</expression>
                                    </image>
                                </cell>
                                <cell id="4763">
                                    <text id="4757">
                                        <method name="onRender"><![CDATA[if (params["Measure"]=="UNIT"){
			this.text = reportContext.getMessage("param.measure.unit", reportContext.getLocale());
} else if (params["Measure"]=="AMOUNT"){
			this.text = reportContext.getMessage("param.measure.revenue", reportContext.getLocale());
} else if (params["Measure"]=="AMOUNT_K"){
			this.text = reportContext.getMessage("param.measure.revenuek", reportContext.getLocale());	
} 
this.text+= " "+params["Year"];]]></method>
                                    </text>
                                </cell>
                            </row>
                        </grid>
                    </property>
                    <property name="style">crosstab-general-header</property>
                </extended-item>
            </property>
            <property name="hideMeasureHeader">true</property>
            <expression name="bookmark" type="javascript">"VisioneoCrossTable"</expression>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">CITY</property>
                    <expression name="expression" type="javascript">BirtStr.left(dimension["Office"]["CITY"], 11)</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">PRODUCTVENDOR</property>
                    <expression name="expression">dimension["Vendor"]["PRODUCTVENDOR"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">quantityY_Vendor/PRODUCTVENDOR</property>
                    <expression name="expression">measure["quantityY"]</expression>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Vendor/PRODUCTVENDOR</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">monthID</property>
                    <expression name="expression">dimension["Month"]["monthID"]["DisplayName"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">quantityY_Vendor/PRODUCTVENDOR_Month/monthID</property>
                    <expression name="expression">measure["quantityY"]</expression>
                    <property name="dataType">integer</property>
                    <simple-property-list name="aggregateOn">
                        <value>Vendor/PRODUCTVENDOR</value>
                        <value>Month/monthID</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">quantityY_Office/CITY_Month/monthID</property>
                    <expression name="expression">measure["quantityY"]</expression>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Office/CITY</value>
                        <value>Month/monthID</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">CITY_TOTAL</property>
                    <expression name="expression" type="javascript">"Total"</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">quantityY_Month/monthID</property>
                    <expression name="expression">measure["quantityY"]</expression>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Month/monthID</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">quantityY_Office/CITY</property>
                    <expression name="expression">measure["quantityY"]</expression>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Office/CITY</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">quantityY</property>
                    <expression name="expression">measure["quantityY"]</expression>
                    <property name="dataType">float</property>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">amountY_Office/CITY_Month/monthID</property>
                    <expression name="expression">measure["amountY"]</expression>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Office/CITY</value>
                        <value>Month/monthID</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">amountY_Month/monthID</property>
                    <expression name="expression">measure["amountY"]</expression>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Month/monthID</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">amountY_Vendor/PRODUCTVENDOR_Month/monthID</property>
                    <expression name="expression">measure["amountY"]</expression>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Vendor/PRODUCTVENDOR</value>
                        <value>Month/monthID</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">amountY_Vendor/PRODUCTVENDOR</property>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Vendor/PRODUCTVENDOR</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">measure["amountY"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">amountY_Office/CITY</property>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Office/CITY</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">measure["amountY"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">amountY</property>
                    <property name="dataType">float</property>
                    <property name="aggregateFunction">SUM</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">measure["amountY"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">amountY-1</property>
                    <property name="dataType">float</property>
                    <property name="aggregateFunction">SUM</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">measure["amountY-1"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">quantityY-1</property>
                    <property name="dataType">float</property>
                    <property name="aggregateFunction">SUM</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">measure["quantityY-1"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">quantityY-1_Month/monthID</property>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Month/monthID</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">measure["quantityY-1"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">amountY-1_Month/monthID</property>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Month/monthID</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                    <list-property name="arguments">
                        <structure>
                            <property name="name">Expression</property>
                            <expression name="value" type="javascript">measure["amountY-1"]</expression>
                        </structure>
                    </list-property>
                </structure>
                <structure>
                    <property name="name">quantityY_Office/CITY_Month/monthID_1</property>
                    <expression name="expression">measure["quantityY"]</expression>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Office/CITY</value>
                        <value>Month/monthID</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">quantityY_Office/CITY_1</property>
                    <expression name="expression">measure["quantityY"]</expression>
                    <property name="dataType">float</property>
                    <simple-property-list name="aggregateOn">
                        <value>Office/CITY</value>
                    </simple-property-list>
                    <property name="aggregateFunction">SUM</property>
                </structure>
                <structure>
                    <property name="name">monthNumber</property>
                    <expression name="expression" type="javascript">dimension["Month"]["monthID"]</expression>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="name">officecode</property>
                    <expression name="expression" type="javascript">dimension["Office"]["CITY"]["OFFICECODE"]</expression>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <property name="multiViews">
                <multi-views id="4861">
                    <property name="index">-1</property>
                    <property name="views">
                        <extended-item extensionName="Chart" id="4862">
                            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:data="http://www.birt.eclipse.org/ChartModelData" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/ChartModelType">
  <Version>2.5.1</Version>
  <Type>Tube Chart</Type>
  <SubType>Side-by-side</SubType>
  <Block>
    <Children xsi:type="layout:TitleBlock">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>false</Visible>
      <Label>
        <Caption>
          <Value>Tube Chart Title</Value>
          <Font>
            <Size>16.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
    </Children>
    <Children xsi:type="layout:Plot">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <HorizontalSpacing>5</HorizontalSpacing>
      <VerticalSpacing>5</VerticalSpacing>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>0.0</Left>
          <Bottom>0.0</Bottom>
          <Right>0.0</Right>
        </Insets>
      </ClientArea>
    </Children>
    <Children xsi:type="layout:Legend">
      <Bounds>
        <Left>0.0</Left>
        <Top>0.0</Top>
        <Width>0.0</Width>
        <Height>0.0</Height>
      </Bounds>
      <Anchor>West</Anchor>
      <Insets>
        <Top>3.0</Top>
        <Left>3.0</Left>
        <Bottom>3.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Row>-1</Row>
      <Column>-1</Column>
      <Rowspan>-1</Rowspan>
      <Columnspan>-1</Columnspan>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>false</Visible>
      </Outline>
      <Visible>true</Visible>
      <ClientArea>
        <Outline>
          <Style>Solid</Style>
          <Thickness>0</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>2.0</Top>
          <Left>2.0</Left>
          <Bottom>2.0</Bottom>
          <Right>2.0</Right>
        </Insets>
      </ClientArea>
      <Text>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Text>
      <Orientation>Vertical</Orientation>
      <Direction>Top_Bottom</Direction>
      <Separator>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
        <Visible>true</Visible>
      </Separator>
      <Position>Right</Position>
      <ItemType>Series</ItemType>
      <Title>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
          <Visible>false</Visible>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Title>
      <TitlePosition>Above</TitlePosition>
      <ShowValue>false</ShowValue>
    </Children>
    <Bounds>
      <Left>0.0</Left>
      <Top>0.0</Top>
      <Width>212.0</Width>
      <Height>130.0</Height>
    </Bounds>
    <Insets>
      <Top>3.0</Top>
      <Left>3.0</Left>
      <Bottom>3.0</Bottom>
      <Right>3.0</Right>
    </Insets>
    <Row>-1</Row>
    <Column>-1</Column>
    <Rowspan>-1</Rowspan>
    <Columnspan>-1</Columnspan>
    <Outline>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Color>
        <Transparency>255</Transparency>
        <Red>0</Red>
        <Green>0</Green>
        <Blue>0</Blue>
      </Color>
      <Visible>false</Visible>
    </Outline>
    <Visible>true</Visible>
  </Block>
  <Dimension>Two_Dimensional_With_Depth</Dimension>
  <Units>Points</Units>
  <SeriesThickness>10.0</SeriesThickness>
  <GridColumnCount>0</GridColumnCount>
  <ExtendedProperties>
    <Name>enable.area.alt</Name>
    <Value>false</Value>
  </ExtendedProperties>
  <SampleData>
    <BaseSampleData>
      <DataSetRepresentation>'A','B','C','D','E'</DataSetRepresentation>
    </BaseSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>6,4,12,8,10</DataSetRepresentation>
      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
    </OrthogonalSampleData>
    <OrthogonalSampleData>
      <DataSetRepresentation>42,91,62,9,21</DataSetRepresentation>
      <SeriesDefinitionIndex>1</SeriesDefinitionIndex>
    </OrthogonalSampleData>
  </SampleData>
  <Interactivity>
    <Enable>true</Enable>
    <LegendBehavior>HighlightSerie</LegendBehavior>
  </Interactivity>
  <EmptyMessage>
    <Caption>
      <Value>This chart contains no data.</Value>
      <Font>
        <Alignment>
          <horizontalAlignment>Center</horizontalAlignment>
          <verticalAlignment>Center</verticalAlignment>
        </Alignment>
      </Font>
    </Caption>
    <Background xsi:type="attribute:ColorDefinition">
      <Transparency>64</Transparency>
      <Red>127</Red>
      <Green>127</Green>
      <Blue>127</Blue>
    </Background>
    <Outline>
      <Color>
        <Transparency>128</Transparency>
        <Red>127</Red>
        <Green>127</Green>
        <Blue>127</Blue>
      </Color>
      <Visible>true</Visible>
    </Outline>
    <Insets>
      <Top>10.0</Top>
      <Left>10.0</Left>
      <Bottom>10.0</Bottom>
      <Right>10.0</Right>
    </Insets>
    <Visible>false</Visible>
  </EmptyMessage>
  <Axes>
    <Type>Text</Type>
    <Title>
      <Caption>
        <Value>X-Axis Title</Value>
        <Font>
          <Size>14.0</Size>
          <Bold>true</Bold>
          <Alignment>
            <horizontalAlignment>Center</horizontalAlignment>
            <verticalAlignment>Center</verticalAlignment>
          </Alignment>
        </Font>
      </Caption>
      <Background xsi:type="attribute:ColorDefinition">
        <Transparency>0</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Background>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
      </Outline>
      <Insets>
        <Top>0.0</Top>
        <Left>2.0</Left>
        <Bottom>0.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Visible>false</Visible>
    </Title>
    <TitlePosition>Below</TitlePosition>
    <AssociatedAxes>
      <Type>Linear</Type>
      <Title>
        <Caption>
          <Value>Y-Axis Title</Value>
          <Font>
            <Size>14.0</Size>
            <Bold>true</Bold>
            <Alignment>
              <horizontalAlignment>Center</horizontalAlignment>
              <verticalAlignment>Center</verticalAlignment>
            </Alignment>
            <Rotation>90.0</Rotation>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>false</Visible>
      </Title>
      <TitlePosition>Left</TitlePosition>
      <SeriesDefinitions>
        <Query>
          <Definition></Definition>
          <Grouping>
            <GroupType>Text</GroupType>
          </Grouping>
        </Query>
        <SeriesPalette>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>80</Red>
            <Green>166</Green>
            <Blue>218</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>242</Red>
            <Green>88</Green>
            <Blue>106</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>232</Red>
            <Green>172</Green>
            <Blue>57</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>255</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>64</Red>
            <Green>128</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>170</Red>
            <Green>85</Green>
            <Blue>85</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>0</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>192</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>7</Red>
            <Green>146</Green>
            <Blue>94</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>128</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>128</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>0</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>64</Green>
            <Blue>64</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>64</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>80</Red>
            <Green>240</Green>
            <Blue>120</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>64</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>0</Green>
            <Blue>64</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>0</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>64</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>64</Green>
            <Blue>0</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>0</Blue>
          </Entries>
        </SeriesPalette>
        <Series xsi:type="type:BarSeries">
          <Visible>true</Visible>
          <Label>
            <Caption>
              <Value></Value>
              <Font>
                <Alignment/>
              </Font>
            </Caption>
            <Background xsi:type="attribute:ColorDefinition">
              <Transparency>0</Transparency>
              <Red>255</Red>
              <Green>255</Green>
              <Blue>255</Blue>
            </Background>
            <Outline>
              <Style>Solid</Style>
              <Thickness>1</Thickness>
              <Color>
                <Transparency>255</Transparency>
                <Red>0</Red>
                <Green>0</Green>
                <Blue>0</Blue>
              </Color>
              <Visible>false</Visible>
            </Outline>
            <Insets>
              <Top>0.0</Top>
              <Left>2.0</Left>
              <Bottom>0.0</Bottom>
              <Right>3.0</Right>
            </Insets>
            <Visible>true</Visible>
          </Label>
          <DataDefinition>
            <Definition>data[&quot;quantityY_Month/monthID&quot;]</Definition>
            <Grouping>
              <Enabled>false</Enabled>
              <GroupType>Text</GroupType>
              <AggregateExpression xsi:nil="true"/>
            </Grouping>
          </DataDefinition>
          <SeriesIdentifier>Y</SeriesIdentifier>
          <DataPoint>
            <Components>
              <Type>Orthogonal_Value</Type>
            </Components>
            <Separator>, </Separator>
          </DataPoint>
          <LabelPosition>Outside</LabelPosition>
          <Stacked>false</Stacked>
          <Translucent>true</Translucent>
          <Riser>Tube</Riser>
        </Series>
        <Grouping>
          <GroupType>Text</GroupType>
          <AggregateExpression>Sum</AggregateExpression>
        </Grouping>
      </SeriesDefinitions>
      <SeriesDefinitions>
        <Query>
          <Definition></Definition>
          <Grouping>
            <GroupType>Text</GroupType>
          </Grouping>
        </Query>
        <SeriesPalette>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>242</Red>
            <Green>88</Green>
            <Blue>106</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>232</Red>
            <Green>172</Green>
            <Blue>57</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>255</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>64</Red>
            <Green>128</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>170</Red>
            <Green>85</Green>
            <Blue>85</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>0</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>192</Red>
            <Green>192</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>192</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>7</Red>
            <Green>146</Green>
            <Blue>94</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>128</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>128</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>192</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>0</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>64</Green>
            <Blue>64</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>64</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>80</Red>
            <Green>240</Green>
            <Blue>120</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>64</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>0</Green>
            <Blue>64</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>0</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>64</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>128</Red>
            <Green>128</Green>
            <Blue>128</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>64</Green>
            <Blue>0</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>255</Red>
            <Green>128</Green>
            <Blue>0</Blue>
          </Entries>
          <Entries xsi:type="attribute:ColorDefinition">
            <Transparency>255</Transparency>
            <Red>80</Red>
            <Green>166</Green>
            <Blue>218</Blue>
          </Entries>
        </SeriesPalette>
        <Series xsi:type="type:BarSeries">
          <Visible>true</Visible>
          <Label>
            <Caption>
              <Value></Value>
              <Font>
                <Alignment/>
              </Font>
            </Caption>
            <Background xsi:type="attribute:ColorDefinition">
              <Transparency>0</Transparency>
              <Red>255</Red>
              <Green>255</Green>
              <Blue>255</Blue>
            </Background>
            <Outline>
              <Style>Solid</Style>
              <Thickness>1</Thickness>
              <Color>
                <Transparency>255</Transparency>
                <Red>0</Red>
                <Green>0</Green>
                <Blue>0</Blue>
              </Color>
              <Visible>false</Visible>
            </Outline>
            <Insets>
              <Top>0.0</Top>
              <Left>2.0</Left>
              <Bottom>0.0</Bottom>
              <Right>3.0</Right>
            </Insets>
            <Visible>false</Visible>
          </Label>
          <DataDefinition>
            <Definition>data[&quot;quantityY-1_Month/monthID&quot;]</Definition>
            <Grouping>
              <Enabled>false</Enabled>
              <GroupType>Text</GroupType>
              <AggregateExpression xsi:nil="true"/>
            </Grouping>
          </DataDefinition>
          <SeriesIdentifier>Y-1</SeriesIdentifier>
          <DataPoint>
            <Components>
              <Type>Orthogonal_Value</Type>
            </Components>
            <Separator>, </Separator>
          </DataPoint>
          <LabelPosition>Outside</LabelPosition>
          <Stacked>false</Stacked>
          <Translucent>true</Translucent>
          <Riser>Tube</Riser>
        </Series>
        <Grouping>
          <GroupType>Text</GroupType>
          <AggregateExpression>Sum</AggregateExpression>
        </Grouping>
      </SeriesDefinitions>
      <Orientation>Vertical</Orientation>
      <LineAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Visible>true</Visible>
      </LineAttributes>
      <Label>
        <Caption>
          <Value></Value>
          <Font>
            <Alignment/>
          </Font>
        </Caption>
        <Background xsi:type="attribute:ColorDefinition">
          <Transparency>0</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Background>
        <Outline>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>0</Red>
            <Green>0</Green>
            <Blue>0</Blue>
          </Color>
        </Outline>
        <Insets>
          <Top>0.0</Top>
          <Left>2.0</Left>
          <Bottom>0.0</Bottom>
          <Right>3.0</Right>
        </Insets>
        <Visible>true</Visible>
      </Label>
      <LabelPosition>Left</LabelPosition>
      <MajorGrid>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>196</Red>
            <Green>196</Green>
            <Blue>196</Blue>
          </Color>
          <Visible>false</Visible>
        </LineAttributes>
        <TickStyle>Across</TickStyle>
        <TickAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>196</Red>
            <Green>196</Green>
            <Blue>196</Blue>
          </Color>
          <Visible>true</Visible>
        </TickAttributes>
      </MajorGrid>
      <MinorGrid>
        <LineAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>225</Red>
            <Green>225</Green>
            <Blue>225</Blue>
          </Color>
          <Visible>false</Visible>
        </LineAttributes>
        <TickStyle>Across</TickStyle>
        <TickAttributes>
          <Style>Solid</Style>
          <Thickness>1</Thickness>
          <Color>
            <Transparency>255</Transparency>
            <Red>225</Red>
            <Green>225</Green>
            <Blue>225</Blue>
          </Color>
          <Visible>false</Visible>
        </TickAttributes>
      </MinorGrid>
      <Scale>
        <MinorGridsPerUnit>5</MinorGridsPerUnit>
      </Scale>
      <Origin>
        <Type>Min</Type>
        <Value xsi:type="data:NumberDataElement">
          <Value>0.0</Value>
        </Value>
      </Origin>
      <PrimaryAxis>true</PrimaryAxis>
      <Percent>false</Percent>
    </AssociatedAxes>
    <SeriesDefinitions>
      <Query>
        <Definition></Definition>
      </Query>
      <SeriesPalette>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>166</Green>
          <Blue>218</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>242</Red>
          <Green>88</Green>
          <Blue>106</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>232</Red>
          <Green>172</Green>
          <Blue>57</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>64</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>170</Red>
          <Green>85</Green>
          <Blue>85</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>192</Red>
          <Green>192</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>192</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>7</Red>
          <Green>146</Green>
          <Blue>94</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>192</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>64</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>80</Red>
          <Green>240</Green>
          <Blue>120</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>0</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>0</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>64</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>128</Red>
          <Green>128</Green>
          <Blue>128</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>64</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>255</Green>
          <Blue>255</Blue>
        </Entries>
        <Entries xsi:type="attribute:ColorDefinition">
          <Transparency>255</Transparency>
          <Red>255</Red>
          <Green>128</Green>
          <Blue>0</Blue>
        </Entries>
      </SeriesPalette>
      <Series>
        <Visible>true</Visible>
        <Label>
          <Caption>
            <Value></Value>
            <Font>
              <Alignment/>
            </Font>
          </Caption>
          <Background xsi:type="attribute:ColorDefinition">
            <Transparency>0</Transparency>
            <Red>255</Red>
            <Green>255</Green>
            <Blue>255</Blue>
          </Background>
          <Outline>
            <Style>Solid</Style>
            <Thickness>1</Thickness>
            <Color>
              <Transparency>255</Transparency>
              <Red>0</Red>
              <Green>0</Green>
              <Blue>0</Blue>
            </Color>
            <Visible>false</Visible>
          </Outline>
          <Insets>
            <Top>0.0</Top>
            <Left>2.0</Left>
            <Bottom>0.0</Bottom>
            <Right>3.0</Right>
          </Insets>
          <Visible>false</Visible>
        </Label>
        <DataDefinition>
          <Definition>data[&quot;monthID&quot;]</Definition>
        </DataDefinition>
        <SeriesIdentifier></SeriesIdentifier>
        <DataPoint>
          <Components>
            <Type>Orthogonal_Value</Type>
          </Components>
          <Separator>, </Separator>
        </DataPoint>
        <LabelPosition>Outside</LabelPosition>
        <Stacked>false</Stacked>
      </Series>
      <Grouping>
        <GroupType>Text</GroupType>
        <AggregateExpression>Sum</AggregateExpression>
      </Grouping>
      <SortKey>
        <Definition>data[&quot;monthID&quot;]</Definition>
      </SortKey>
    </SeriesDefinitions>
    <Orientation>Horizontal</Orientation>
    <LineAttributes>
      <Style>Solid</Style>
      <Thickness>1</Thickness>
      <Visible>true</Visible>
    </LineAttributes>
    <Label>
      <Caption>
        <Value></Value>
        <Font>
          <Alignment/>
        </Font>
      </Caption>
      <Background xsi:type="attribute:ColorDefinition">
        <Transparency>0</Transparency>
        <Red>255</Red>
        <Green>255</Green>
        <Blue>255</Blue>
      </Background>
      <Outline>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>0</Red>
          <Green>0</Green>
          <Blue>0</Blue>
        </Color>
      </Outline>
      <Insets>
        <Top>0.0</Top>
        <Left>2.0</Left>
        <Bottom>0.0</Bottom>
        <Right>3.0</Right>
      </Insets>
      <Visible>true</Visible>
    </Label>
    <LabelPosition>Below</LabelPosition>
    <MajorGrid>
      <LineAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>196</Red>
          <Green>196</Green>
          <Blue>196</Blue>
        </Color>
        <Visible>false</Visible>
      </LineAttributes>
      <TickStyle>Across</TickStyle>
      <TickAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>196</Red>
          <Green>196</Green>
          <Blue>196</Blue>
        </Color>
        <Visible>true</Visible>
      </TickAttributes>
    </MajorGrid>
    <MinorGrid>
      <LineAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>225</Red>
          <Green>225</Green>
          <Blue>225</Blue>
        </Color>
        <Visible>false</Visible>
      </LineAttributes>
      <TickStyle>Across</TickStyle>
      <TickAttributes>
        <Style>Solid</Style>
        <Thickness>1</Thickness>
        <Color>
          <Transparency>255</Transparency>
          <Red>225</Red>
          <Green>225</Green>
          <Blue>225</Blue>
        </Color>
        <Visible>false</Visible>
      </TickAttributes>
    </MinorGrid>
    <Scale>
      <MinorGridsPerUnit>5</MinorGridsPerUnit>
    </Scale>
    <Origin>
      <Type>Min</Type>
      <Value xsi:type="data:NumberDataElement">
        <Value>0.0</Value>
      </Value>
    </Origin>
    <PrimaryAxis>true</PrimaryAxis>
    <CategoryAxis>true</CategoryAxis>
    <Percent>false</Percent>
  </Axes>
  <Orientation>Vertical</Orientation>
  <Rotation/>
</model:ChartWithAxes>
]]></xml-property>
                            <property name="outputFormat">SVG</property>
                            <property name="inheritColumns">false</property>
                            <property name="height">4.135416666666667in</property>
                            <property name="width">10.458333333333334in</property>
                        </extended-item>
                    </property>
                </multi-views>
            </property>
        </extended-item>
        <grid id="4135">
            <property name="backgroundColor">#A8A8A8</property>
            <property name="color">#FFFFFF</property>
            <column id="4136">
                <property name="textAlign">center</property>
                <property name="width">25%</property>
            </column>
            <column id="4137">
                <property name="width">10.1875in</property>
            </column>
            <row id="4138">
                <cell id="4139">
                    <property name="style">crosstab-row-header-lvl2</property>
                    <property name="fontWeight">bold</property>
                    <label id="4141">
                        <text-property name="text" key="param.product.prompt"></text-property>
                    </label>
                </cell>
                <cell id="4140">
                    <property name="style">crosstab-row-header-lvl2</property>
                    <text-data id="4904">
                        <property name="marginLeft">15px</property>
                        <property name="dataSet">Products</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">PRODUCTCODE</property>
                                <text-property name="displayName">PRODUCTCODE</text-property>
                                <expression name="expression" type="javascript">dataSetRow["PRODUCTCODE"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">PRODUCTNAME</property>
                                <text-property name="displayName">PRODUCTNAME</text-property>
                                <expression name="expression" type="javascript">dataSetRow["PRODUCTNAME"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">PRODUCTVENDOR</property>
                                <text-property name="displayName">PRODUCTVENDOR</text-property>
                                <expression name="expression" type="javascript">dataSetRow["PRODUCTVENDOR"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">BUYPRICE</property>
                                <text-property name="displayName">BUYPRICE</text-property>
                                <expression name="expression" type="javascript">dataSetRow["BUYPRICE"]</expression>
                                <property name="dataType">float</property>
                            </structure>
                        </list-property>
                        <method name="onCreate"><![CDATA[var paramMV = params["Product"].value;
if (strproducts.length==0){
	this.text = reportContext.getMessage("param.product.all", reportContext.getLocale());
} else if (paramMV.length <= 10){
	this.text = productList;
}else {
	this.text = paramMV.length+" "+reportContext.getMessage("param.product.selected", reportContext.getLocale());
}]]></method>
                        <expression name="valueExpr">"Selected products"</expression>
                        <property name="contentType">html</property>
                    </text-data>
                </cell>
            </row>
        </grid>
        <text id="4850">
            <method name="onRender"><![CDATA[var namespace =  reportContext.getAppContext().get("visioneo.report.namespace");
if (namespace != null){
		this.text=this.text.replace("<%=namespace%>",namespace);
}


]]></method>
            <property name="contentType">html</property>
            <text-property name="content"><![CDATA[<script type="text/javascript">  
	try{
	        VisioneoWidget.crosstableDrillable ("VisioneoCrossTable","<%=namespace%>");                                                                            
    }catch(e){
    		//nothing to do: not a portlet context
    }
</script>]]></text-property>
        </text>
    </body>
    <property name="pageVariables">
        <variable-element name="currentMonth">
            <expression name="value" type="javascript">201105</expression>
            <property name="type">report</property>
        </variable-element>
        <variable-element name="startExecutionTime">
            <expression name="value" type="javascript">0</expression>
            <property name="type">report</property>
        </variable-element>
    </property>
    <property name="thumbnail">
        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
</property>
</report>
